version: '3.8'
networks:
  matrix_cloud:
    name: matrix_cloud
    driver: bridge


services:
  es:
    image: elasticsearch:${ELASTIC_VERSION}
    container_name: es
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      # 设置集群名称
      cluster.name: elasticsearch
      # 以单一节点模式启动
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/logs:/usr/share/elasticsearch/logs
    networks:
      - matrix_cloud
    restart: always

  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
    networks:
      - matrix_cloud
    depends_on:
      - es

  sky-oap:
    image: apache/skywalking-oap-server:${SKYWALING_VERSION}
    container_name: sky-oap
    volumes:
      - ./skywalking:/skywalking/ext-config
    ports:
      - "11800:11800"
      - "12800:12800"
    environment:
      TZ: Asia/Shanghai
    depends_on:
      - es
    networks:
      - matrix_cloud
    restart: always

  sky-ui:
    image: apache/skywalking-ui:${SKYWALING_UI_VERSION}
    container_name: sky-ui
    depends_on:
      - sky-oap
    ports:
      - "9080:8080"
    environment:
      TZ: Asia/Shanghai
      SW_OAP_ADDRESS: http://sky-oap:12800
    networks:
      - matrix_cloud
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
    ports:
      - "9090:9090"
    restart: always
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./prometheus/grafana/data:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    restart: always
    user: "0"
    networks:
      - default

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: always
    networks:
      - default

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    restart: always
    networks:
      - default

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/:/var/run/:rw
      - /sys:/sys:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
      - /var/lib/docker/:/var/lib/docker:ro #linux使用此配置，注释下行配置
    #      - /mnt/wsl/docker-desktop-data/version-pack-data/community/docker/:/rootfs/var/lib/docker:ro #仅适用于window的wsl2配置，挂载docker，否则无法查看容器
    ports:
      - "8081:8080"
    restart: always
    privileged: true
    networks:
      - default